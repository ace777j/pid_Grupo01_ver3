//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoPidG01.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_PIGrupo01Entities : DbContext
    {
        public DB_PIGrupo01Entities()
            : base("name=DB_PIGrupo01Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Departamento> Departamento { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Mascota> Mascota { get; set; }
        public virtual DbSet<modulo> modulo { get; set; }
        public virtual DbSet<operaciones> operaciones { get; set; }
        public virtual DbSet<Propietario> Propietario { get; set; }
        public virtual DbSet<rol> rol { get; set; }
        public virtual DbSet<rol_operacion> rol_operacion { get; set; }
        public virtual DbSet<TipoDepartamento> TipoDepartamento { get; set; }
        public virtual DbSet<usuario> usuario { get; set; }
        public virtual DbSet<Visitante> Visitante { get; set; }
    
        public virtual int usp_DepartamentoActualizar(Nullable<int> idDepa, string nroPiso, Nullable<System.DateTime> fechaRegistro, string usuReg, Nullable<int> idEstado, Nullable<int> idTipo)
        {
            var idDepaParameter = idDepa.HasValue ?
                new ObjectParameter("idDepa", idDepa) :
                new ObjectParameter("idDepa", typeof(int));
    
            var nroPisoParameter = nroPiso != null ?
                new ObjectParameter("nroPiso", nroPiso) :
                new ObjectParameter("nroPiso", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("fechaRegistro", fechaRegistro) :
                new ObjectParameter("fechaRegistro", typeof(System.DateTime));
    
            var usuRegParameter = usuReg != null ?
                new ObjectParameter("usuReg", usuReg) :
                new ObjectParameter("usuReg", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DepartamentoActualizar", idDepaParameter, nroPisoParameter, fechaRegistroParameter, usuRegParameter, idEstadoParameter, idTipoParameter);
        }
    
        public virtual ObjectResult<usp_DepartamentoDatos_Result> usp_DepartamentoDatos(Nullable<int> idDepa)
        {
            var idDepaParameter = idDepa.HasValue ?
                new ObjectParameter("idDepa", idDepa) :
                new ObjectParameter("idDepa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DepartamentoDatos_Result>("usp_DepartamentoDatos", idDepaParameter);
        }
    
        public virtual int usp_DepartamentoEliminar(Nullable<int> idDepa)
        {
            var idDepaParameter = idDepa.HasValue ?
                new ObjectParameter("idDepa", idDepa) :
                new ObjectParameter("idDepa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DepartamentoEliminar", idDepaParameter);
        }
    
        public virtual int usp_DepartamentoInsertar(string nroPiso, Nullable<System.DateTime> fechaRegistro, string usuReg, Nullable<int> idEstado, Nullable<int> idTipo)
        {
            var nroPisoParameter = nroPiso != null ?
                new ObjectParameter("nroPiso", nroPiso) :
                new ObjectParameter("nroPiso", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("fechaRegistro", fechaRegistro) :
                new ObjectParameter("fechaRegistro", typeof(System.DateTime));
    
            var usuRegParameter = usuReg != null ?
                new ObjectParameter("usuReg", usuReg) :
                new ObjectParameter("usuReg", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DepartamentoInsertar", nroPisoParameter, fechaRegistroParameter, usuRegParameter, idEstadoParameter, idTipoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_DepartamentoListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_DepartamentoListar");
        }
    
        public virtual ObjectResult<usp_EstadoListar_Result> usp_EstadoListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EstadoListar_Result>("usp_EstadoListar");
        }
    
        public virtual int usp_MascotaActualizar(Nullable<int> idMascota, string tipoMascota, string nroMascota, Nullable<int> idProp)
        {
            var idMascotaParameter = idMascota.HasValue ?
                new ObjectParameter("idMascota", idMascota) :
                new ObjectParameter("idMascota", typeof(int));
    
            var tipoMascotaParameter = tipoMascota != null ?
                new ObjectParameter("tipoMascota", tipoMascota) :
                new ObjectParameter("tipoMascota", typeof(string));
    
            var nroMascotaParameter = nroMascota != null ?
                new ObjectParameter("nroMascota", nroMascota) :
                new ObjectParameter("nroMascota", typeof(string));
    
            var idPropParameter = idProp.HasValue ?
                new ObjectParameter("idProp", idProp) :
                new ObjectParameter("idProp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MascotaActualizar", idMascotaParameter, tipoMascotaParameter, nroMascotaParameter, idPropParameter);
        }
    
        public virtual ObjectResult<usp_MascotaDatos_Result> usp_MascotaDatos(Nullable<int> idMascota)
        {
            var idMascotaParameter = idMascota.HasValue ?
                new ObjectParameter("idMascota", idMascota) :
                new ObjectParameter("idMascota", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MascotaDatos_Result>("usp_MascotaDatos", idMascotaParameter);
        }
    
        public virtual int usp_MascotaEliminar(Nullable<int> idMascota)
        {
            var idMascotaParameter = idMascota.HasValue ?
                new ObjectParameter("idMascota", idMascota) :
                new ObjectParameter("idMascota", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MascotaEliminar", idMascotaParameter);
        }
    
        public virtual int usp_MascotaInsertar(string tipoMascota, string nroMascota, Nullable<int> idProp)
        {
            var tipoMascotaParameter = tipoMascota != null ?
                new ObjectParameter("tipoMascota", tipoMascota) :
                new ObjectParameter("tipoMascota", typeof(string));
    
            var nroMascotaParameter = nroMascota != null ?
                new ObjectParameter("nroMascota", nroMascota) :
                new ObjectParameter("nroMascota", typeof(string));
    
            var idPropParameter = idProp.HasValue ?
                new ObjectParameter("idProp", idProp) :
                new ObjectParameter("idProp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MascotaInsertar", tipoMascotaParameter, nroMascotaParameter, idPropParameter);
        }
    
        public virtual int usp_PropietarioActualizar(Nullable<int> idProp, string nomProp, string apeProp, string dniProp, string correoProp, string movilProp, Nullable<System.DateTime> fechaRegistro, string usuReg, Nullable<int> idDepa)
        {
            var idPropParameter = idProp.HasValue ?
                new ObjectParameter("idProp", idProp) :
                new ObjectParameter("idProp", typeof(int));
    
            var nomPropParameter = nomProp != null ?
                new ObjectParameter("nomProp", nomProp) :
                new ObjectParameter("nomProp", typeof(string));
    
            var apePropParameter = apeProp != null ?
                new ObjectParameter("apeProp", apeProp) :
                new ObjectParameter("apeProp", typeof(string));
    
            var dniPropParameter = dniProp != null ?
                new ObjectParameter("dniProp", dniProp) :
                new ObjectParameter("dniProp", typeof(string));
    
            var correoPropParameter = correoProp != null ?
                new ObjectParameter("correoProp", correoProp) :
                new ObjectParameter("correoProp", typeof(string));
    
            var movilPropParameter = movilProp != null ?
                new ObjectParameter("movilProp", movilProp) :
                new ObjectParameter("movilProp", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("fechaRegistro", fechaRegistro) :
                new ObjectParameter("fechaRegistro", typeof(System.DateTime));
    
            var usuRegParameter = usuReg != null ?
                new ObjectParameter("usuReg", usuReg) :
                new ObjectParameter("usuReg", typeof(string));
    
            var idDepaParameter = idDepa.HasValue ?
                new ObjectParameter("idDepa", idDepa) :
                new ObjectParameter("idDepa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PropietarioActualizar", idPropParameter, nomPropParameter, apePropParameter, dniPropParameter, correoPropParameter, movilPropParameter, fechaRegistroParameter, usuRegParameter, idDepaParameter);
        }
    
        public virtual ObjectResult<usp_PropietarioDatos_Result> usp_PropietarioDatos(Nullable<int> idProp)
        {
            var idPropParameter = idProp.HasValue ?
                new ObjectParameter("idProp", idProp) :
                new ObjectParameter("idProp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PropietarioDatos_Result>("usp_PropietarioDatos", idPropParameter);
        }
    
        public virtual int usp_PropietarioEliminar(Nullable<int> idProp)
        {
            var idPropParameter = idProp.HasValue ?
                new ObjectParameter("idProp", idProp) :
                new ObjectParameter("idProp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PropietarioEliminar", idPropParameter);
        }
    
        public virtual int usp_PropietarioInsertar(string nomProp, string apeProp, string dniProp, string correoProp, string movilProp, Nullable<System.DateTime> fechaRegistro, string usuReg, Nullable<int> idDepa)
        {
            var nomPropParameter = nomProp != null ?
                new ObjectParameter("nomProp", nomProp) :
                new ObjectParameter("nomProp", typeof(string));
    
            var apePropParameter = apeProp != null ?
                new ObjectParameter("apeProp", apeProp) :
                new ObjectParameter("apeProp", typeof(string));
    
            var dniPropParameter = dniProp != null ?
                new ObjectParameter("dniProp", dniProp) :
                new ObjectParameter("dniProp", typeof(string));
    
            var correoPropParameter = correoProp != null ?
                new ObjectParameter("correoProp", correoProp) :
                new ObjectParameter("correoProp", typeof(string));
    
            var movilPropParameter = movilProp != null ?
                new ObjectParameter("movilProp", movilProp) :
                new ObjectParameter("movilProp", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("fechaRegistro", fechaRegistro) :
                new ObjectParameter("fechaRegistro", typeof(System.DateTime));
    
            var usuRegParameter = usuReg != null ?
                new ObjectParameter("usuReg", usuReg) :
                new ObjectParameter("usuReg", typeof(string));
    
            var idDepaParameter = idDepa.HasValue ?
                new ObjectParameter("idDepa", idDepa) :
                new ObjectParameter("idDepa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PropietarioInsertar", nomPropParameter, apePropParameter, dniPropParameter, correoPropParameter, movilPropParameter, fechaRegistroParameter, usuRegParameter, idDepaParameter);
        }
    
        public virtual ObjectResult<usp_PropietarioListar_Result> usp_PropietarioListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PropietarioListar_Result>("usp_PropietarioListar");
        }
    
        public virtual ObjectResult<usp_TipoDepartamentoListar_Result> usp_TipoDepartamentoListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TipoDepartamentoListar_Result>("usp_TipoDepartamentoListar");
        }
    
        public virtual int usp_VisitanteActualizar(Nullable<int> idVisi, string nomVisi, string apeVisi, string dniVisi, string movilVisi, Nullable<System.DateTime> fechaRegistro, string usuReg, Nullable<int> idProp)
        {
            var idVisiParameter = idVisi.HasValue ?
                new ObjectParameter("idVisi", idVisi) :
                new ObjectParameter("idVisi", typeof(int));
    
            var nomVisiParameter = nomVisi != null ?
                new ObjectParameter("nomVisi", nomVisi) :
                new ObjectParameter("nomVisi", typeof(string));
    
            var apeVisiParameter = apeVisi != null ?
                new ObjectParameter("apeVisi", apeVisi) :
                new ObjectParameter("apeVisi", typeof(string));
    
            var dniVisiParameter = dniVisi != null ?
                new ObjectParameter("dniVisi", dniVisi) :
                new ObjectParameter("dniVisi", typeof(string));
    
            var movilVisiParameter = movilVisi != null ?
                new ObjectParameter("movilVisi", movilVisi) :
                new ObjectParameter("movilVisi", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("fechaRegistro", fechaRegistro) :
                new ObjectParameter("fechaRegistro", typeof(System.DateTime));
    
            var usuRegParameter = usuReg != null ?
                new ObjectParameter("usuReg", usuReg) :
                new ObjectParameter("usuReg", typeof(string));
    
            var idPropParameter = idProp.HasValue ?
                new ObjectParameter("idProp", idProp) :
                new ObjectParameter("idProp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VisitanteActualizar", idVisiParameter, nomVisiParameter, apeVisiParameter, dniVisiParameter, movilVisiParameter, fechaRegistroParameter, usuRegParameter, idPropParameter);
        }
    
        public virtual ObjectResult<usp_VisitanteDatos_Result> usp_VisitanteDatos(Nullable<int> idVisi)
        {
            var idVisiParameter = idVisi.HasValue ?
                new ObjectParameter("idVisi", idVisi) :
                new ObjectParameter("idVisi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_VisitanteDatos_Result>("usp_VisitanteDatos", idVisiParameter);
        }
    
        public virtual int usp_VisitanteEliminar(Nullable<int> idVisi)
        {
            var idVisiParameter = idVisi.HasValue ?
                new ObjectParameter("idVisi", idVisi) :
                new ObjectParameter("idVisi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VisitanteEliminar", idVisiParameter);
        }
    
        public virtual int usp_VisitanteInsertar(string nomVisi, string apeVisi, string dniVisi, string movilVisi, Nullable<System.DateTime> fechaRegistro, string usuReg, Nullable<int> idProp)
        {
            var nomVisiParameter = nomVisi != null ?
                new ObjectParameter("nomVisi", nomVisi) :
                new ObjectParameter("nomVisi", typeof(string));
    
            var apeVisiParameter = apeVisi != null ?
                new ObjectParameter("apeVisi", apeVisi) :
                new ObjectParameter("apeVisi", typeof(string));
    
            var dniVisiParameter = dniVisi != null ?
                new ObjectParameter("dniVisi", dniVisi) :
                new ObjectParameter("dniVisi", typeof(string));
    
            var movilVisiParameter = movilVisi != null ?
                new ObjectParameter("movilVisi", movilVisi) :
                new ObjectParameter("movilVisi", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("fechaRegistro", fechaRegistro) :
                new ObjectParameter("fechaRegistro", typeof(System.DateTime));
    
            var usuRegParameter = usuReg != null ?
                new ObjectParameter("usuReg", usuReg) :
                new ObjectParameter("usuReg", typeof(string));
    
            var idPropParameter = idProp.HasValue ?
                new ObjectParameter("idProp", idProp) :
                new ObjectParameter("idProp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_VisitanteInsertar", nomVisiParameter, apeVisiParameter, dniVisiParameter, movilVisiParameter, fechaRegistroParameter, usuRegParameter, idPropParameter);
        }
    
        public virtual ObjectResult<usp_MascotaListar_Result> usp_MascotaListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MascotaListar_Result>("usp_MascotaListar");
        }
    
        public virtual ObjectResult<usp_VisitanteListar_Result> usp_VisitanteListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_VisitanteListar_Result>("usp_VisitanteListar");
        }
    }
}
